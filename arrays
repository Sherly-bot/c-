#include <iostream>
#include <climits>
using namespace std;
int main() {
    int smaller=INT_MAX;
    int maximum=INT_MIN;
    int array[5]={54,34,45,67,22};
    int size=5;
    for(int i=0;i<size;i++)
    {
    if(array[i]>maximum)
    {
        maximum=array[i];
    }
        
    }
    cout << "the smaller value is"<< maximum<<endl;
    return 0;
}




binary search

#include <iostream>
using namespace std;
int isbinary(int array[], int size, int key)
{
    int start = 0;
    int end = size -1;
    int mid=(start+end)/2;
    while(start<=end)
    {
        if(array[mid]==key)
        {
            return mid;
        }
        if(key>array[mid])
        {
            start = mid+1;
        }
        else
        {
            end = mid-1;
        }
        //start and end update ki toh mid bhi update karna hai
        mid = (start+end)/2;
    }
    return -1;
}

int main() {
    int even[] ={2, 4, 6, 8, 10};
    int size=5;
   int index = isbinary(even, size, 10);
    cout<<"index of 10 is"<< index <<endl;
    
}









binary array sorting(first and last occurence)

#include <iostream>
using namespace std;
int firstocc(int arr[],int size,int key)
{
    int start=0;
    int end=size-1;
    int mid= (start+end)/2;
    int ans=-1;
    while(start<=end)
    {
        if(arr[mid]==key)
        {
          ans=mid; 
         end=mid-1;//first occurence ke liye left mei jana hoga
    
        }
        else if(key>arr[mid])
        {
            start=mid+1;//right mei jana hai
        }
        else
        {
            end=mid-1;//left mei jana hai
        }
     }
          return ans;
}
    

int lastocc(int arr[],int size,int key)
{
    int start=0;
    int end=size-1;
    int mid= (start+end)/2;
    int ans=-1;
    while(start<=end)
    {
        if(arr[mid]==key)
        {
          ans=mid; 
         start=mid+1;//last occurence ke liye right mei jana hoga
    
        }
        else if(key>arr[mid])
        {
            start=mid+1;//right mei jana hai
        }
        else
        {
            end=mid-1;//left mei jana hai
        }}
        return ans;
    }
    

int main()
{
    int even[]={2,3,3,3,3,5,6,7,8,};
    cout<< "the first occurenec of the index is at"<<firstocc(even,9,3)<<endl;
      cout<< "the last occurenec of the index is at"<<lastocc(even,9,3)<<endl;
}



for total number of occurence = (last occurence - first occurence)+1



//pivot find karne
#include <iostream>
using namespace std;
int getpivot(int arr[],int size)
{
    int start = 0;
    int end = size-1;
    int mid = (start+end)/2;
    while(start<end)
    {
        if(arr[mid]>=arr[0])
        {
            start=mid+1;
        }
        else
        {
            end=mid;
        }
        mid=(start+end)/2;
    }
    return end;
    
}
int main()
{
    int even[]={3,8,10,17,1};
   cout<<"the pivot index is"<< getpivot(even,5)<<endl; 
    
}

